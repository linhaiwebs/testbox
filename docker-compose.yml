version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "8010:80"
    depends_on:
      - frontend
      - backend
    container_name: gnfxpxyz-nginx
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: ./backend
    expose:
      - "8011"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - DATABASE_URL=${DATABASE_URL}
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - CORS_ORIGINS=${CORS_ORIGINS}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - CORS_METHODS=${CORS_METHODS}
      - CORS_HEADERS=${CORS_HEADERS}
      - PYTHON_ENV=${PYTHON_ENV}
      - DEBUG=${DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    container_name: gnfxpxyz-backend
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    expose:
      - "80"
    environment:
      - VITE_API_BASE_URL=
      - VITE_APP_TITLE=${VITE_APP_TITLE}
      - VITE_APP_DESCRIPTION=${VITE_APP_DESCRIPTION}
    depends_on:
      - backend
    container_name: gnfxpxyz-frontend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data: